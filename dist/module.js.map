{"version":3,"file":"module.js","mappings":"+DACIA,EADAC,ECAAC,EACAC,E,WCDJC,EAAOC,QAAUC,C,UCAjBF,EAAOC,QAAUE,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASI,EAAyBE,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUN,EAAQA,EAAOC,QAASI,GAG/CL,EAAOC,OACf,CAGAI,EAAoBK,EAAID,ECxBxBJ,EAAoBM,EAAKX,IACxB,IAAIY,EAASZ,GAAUA,EAAOa,WAC7B,IAAOb,EAAiB,QACxB,IAAM,EAEP,OADAK,EAAoBS,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GLNJf,EAAWmB,OAAOC,eAAkBC,GAASF,OAAOC,eAAeC,GAASA,GAASA,EAAa,UAQtGb,EAAoBc,EAAI,SAASC,EAAOC,GAEvC,GADU,EAAPA,IAAUD,EAAQE,KAAKF,IAChB,EAAPC,EAAU,OAAOD,EACpB,GAAoB,iBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPC,GAAaD,EAAMP,WAAY,OAAOO,EAC1C,GAAW,GAAPC,GAAoC,mBAAfD,EAAMG,KAAqB,OAAOH,CAC5D,CACA,IAAII,EAAKR,OAAOS,OAAO,MACvBpB,EAAoBqB,EAAEF,GACtB,IAAIG,EAAM,CAAC,EACX/B,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI+B,EAAiB,EAAPP,GAAYD,EAAyB,iBAAXQ,KAAyBhC,EAAeiC,QAAQD,GAAUA,EAAU/B,EAAS+B,GACxHZ,OAAOc,oBAAoBF,GAASG,QAASC,GAASL,EAAIK,GAAO,IAAOZ,EAAMY,IAI/E,OAFAL,EAAa,QAAI,IAAM,EACvBtB,EAAoBS,EAAEU,EAAIG,GACnBH,CACR,EMxBAnB,EAAoBS,EAAI,CAACb,EAASgC,KACjC,IAAI,IAAID,KAAOC,EACX5B,EAAoB6B,EAAED,EAAYD,KAAS3B,EAAoB6B,EAAEjC,EAAS+B,IAC5EhB,OAAOmB,eAAelC,EAAS+B,EAAK,CAAEI,YAAY,EAAMC,IAAKJ,EAAWD,MCJ3E3B,EAAoBiC,EAAI,CAAC,EAGzBjC,EAAoBkC,EAAKC,GACjBC,QAAQC,IAAI1B,OAAO2B,KAAKtC,EAAoBiC,GAAGM,OAAO,CAACC,EAAUb,KACvE3B,EAAoBiC,EAAEN,GAAKQ,EAASK,GAC7BA,GACL,KCNJxC,EAAoByC,EAAKN,GAEZA,EAAU,MCHvBnC,EAAoB6B,EAAI,CAAChB,EAAK6B,IAAU/B,OAAOgC,UAAUC,eAAeC,KAAKhC,EAAK6B,GRA9EjD,EAAa,CAAC,EACdC,EAAoB,iCAExBM,EAAoB8C,EAAI,CAACC,EAAKC,EAAMrB,EAAKQ,KACxC,GAAG1C,EAAWsD,GAAQtD,EAAWsD,GAAKE,KAAKD,OAA3C,CACA,IAAIE,EAAQC,EACZ,QAAWhD,IAARwB,EAEF,IADA,IAAIyB,EAAUC,SAASC,qBAAqB,UACpCC,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAAK,CACvC,IAAIE,EAAIL,EAAQG,GAChB,GAAGE,EAAEC,aAAa,QAAUX,GAAOU,EAAEC,aAAa,iBAAmBhE,EAAoBiC,EAAK,CAAEuB,EAASO,EAAG,KAAO,CACpH,CAEGP,IACHC,GAAa,GACbD,EAASG,SAASM,cAAc,WAEzBC,QAAU,QACjBV,EAAOW,QAAU,IACb7D,EAAoB8D,IACvBZ,EAAOa,aAAa,QAAS/D,EAAoB8D,IAElDZ,EAAOa,aAAa,eAAgBrE,EAAoBiC,GAExDuB,EAAOc,IAAMjB,GAEdtD,EAAWsD,GAAO,CAACC,GACnB,IAAIiB,EAAmB,CAACC,EAAMC,KAE7BjB,EAAOkB,QAAUlB,EAAOmB,OAAS,KACjCC,aAAaT,GACb,IAAIU,EAAU9E,EAAWsD,GAIzB,UAHOtD,EAAWsD,GAClBG,EAAOsB,YAActB,EAAOsB,WAAWC,YAAYvB,GACnDqB,GAAWA,EAAQ7C,QAASgD,GAAQA,EAAGP,IACpCD,EAAM,OAAOA,EAAKC,IAElBN,EAAUc,WAAWV,EAAiBW,KAAK,UAAMzE,EAAW,CAAE0E,KAAM,UAAWC,OAAQ5B,IAAW,MACtGA,EAAOkB,QAAUH,EAAiBW,KAAK,KAAM1B,EAAOkB,SACpDlB,EAAOmB,OAASJ,EAAiBW,KAAK,KAAM1B,EAAOmB,QACnDlB,GAAcE,SAAS0B,KAAKC,YAAY9B,EApCkB,GSH3DlD,EAAoBqB,EAAKzB,IACH,oBAAXqF,QAA0BA,OAAOC,aAC1CvE,OAAOmB,eAAelC,EAASqF,OAAOC,YAAa,CAAEnE,MAAO,WAE7DJ,OAAOmB,eAAelC,EAAS,aAAc,CAAEmB,OAAO,KCLvDf,EAAoBmF,EAAI,gD,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAGNpF,EAAoBiC,EAAEoD,EAAI,CAAClD,EAASK,KAElC,IAAI8C,EAAqBtF,EAAoB6B,EAAEuD,EAAiBjD,GAAWiD,EAAgBjD,QAAWhC,EACtG,GAA0B,IAAvBmF,EAGF,GAAGA,EACF9C,EAASS,KAAKqC,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAInD,QAAQ,CAACoD,EAASC,IAAYH,EAAqBF,EAAgBjD,GAAW,CAACqD,EAASC,IAC1GjD,EAASS,KAAKqC,EAAmB,GAAKC,GAGtC,IAAIxC,EAAM/C,EAAoBmF,EAAInF,EAAoByC,EAAEN,GAEpDuD,EAAQ,IAAIC,MAgBhB3F,EAAoB8C,EAAEC,EAfFoB,IACnB,GAAGnE,EAAoB6B,EAAEuD,EAAiBjD,KAEf,KAD1BmD,EAAqBF,EAAgBjD,MACRiD,EAAgBjD,QAAWhC,GACrDmF,GAAoB,CACtB,IAAIM,EAAYzB,IAAyB,SAAfA,EAAMU,KAAkB,UAAYV,EAAMU,MAChEgB,EAAU1B,GAASA,EAAMW,QAAUX,EAAMW,OAAOd,IACpD0B,EAAMI,QAAU,iBAAmB3D,EAAU,cAAgByD,EAAY,KAAOC,EAAU,IAC1FH,EAAMK,KAAO,iBACbL,EAAMb,KAAOe,EACbF,EAAMM,QAAUH,EAChBP,EAAmB,GAAGI,EACvB,GAGuC,SAAWvD,EAASA,EAE/D,GAeH,IAAI8D,EAAuB,CAACC,EAA4BC,KACvD,IAGIlG,EAAUkC,GAHTiE,EAAUC,EAAaC,GAAWH,EAGhB5C,EAAI,EAC3B,GAAG6C,EAASG,KAAMC,GAAgC,IAAxBpB,EAAgBoB,IAAa,CACtD,IAAIvG,KAAYoG,EACZrG,EAAoB6B,EAAEwE,EAAapG,KACrCD,EAAoBK,EAAEJ,GAAYoG,EAAYpG,IAG7CqG,GAAsBA,EAAQtG,EAClC,CAEA,IADGkG,GAA4BA,EAA2BC,GACrD5C,EAAI6C,EAAS5C,OAAQD,IACzBpB,EAAUiE,EAAS7C,GAChBvD,EAAoB6B,EAAEuD,EAAiBjD,IAAYiD,EAAgBjD,IACrEiD,EAAgBjD,GAAS,KAE1BiD,EAAgBjD,GAAW,GAKzBsE,EAAqBC,KAAgD,0CAAIA,KAAgD,2CAAK,GAClID,EAAmB/E,QAAQuE,EAAqBrB,KAAK,KAAM,IAC3D6B,EAAmBxD,KAAOgD,EAAqBrB,KAAK,KAAM6B,EAAmBxD,KAAK2B,KAAK6B,G,oYC5DhF,MAuGDE,EAAoB9B,IACxB,OAAQA,GACN,IAAK,QAAS,MAAO,OACrB,IAAK,SAAU,MAAO,OACtB,IAAK,aAAc,MAAO,OAC1B,QAAS,MAAO,S,k6BC3Gb,MCtBM+B,EAAS,IAAIC,EAAAA,YDsBkB,EAAGC,UAASX,OAAMY,QAAOC,aACnE,MAAMC,GAAWC,EAAAA,EAAAA,QAAyB,MACpCC,GAAWD,EAAAA,EAAAA,QAAyB,OAEnCE,EAAcC,IAAmBC,EAAAA,EAAAA,UAAuB,CAC7DC,WAAW,EACXC,SAAS,EACTC,aAAc,GACdC,aAAa,EACbC,WAAY,EACZC,WAAY,IAAIC,QAGXC,EAAYC,IAAiBT,EAAAA,EAAAA,UAAqB,CACvDU,YAAY,EACZC,UAAW,KACXC,aAAc,GACdC,UAAW,KACXC,kBAAmB,EACnBC,gBAAiB,KACjBC,sBAAuB,QAIlBC,EAAWC,IAAgBlB,EAAAA,EAAAA,UAAmD,KAC9EmB,EAAaC,IAAkBpB,EAAAA,EAAAA,WAAS,GACzCqB,GAAiBC,EAAAA,EAAAA,aAAaC,IAClCL,EAAatE,IACX,MAAM4E,EAAU,IAAI5E,EAAM,CAAE6E,MAAM,IAAIlB,MAAOmB,qBAAsBlD,QAAS+C,IAC5E,OAAOC,EAAQtF,OAAS,GAAKsF,EAAQG,OAAO,IAAMH,KAEnD,IAGGI,GAAOC,EAAAA,EAAAA,SAAQ,KACnB,IAAIC,EAAmB,GAkBvB,OAjBIjD,GAAQA,EAAKkD,QAAUlD,EAAKkD,OAAO7F,OAAS,GAC9C2C,EAAKkD,OAAO3H,QAAQ2H,IAClB,MAAMC,EAAQD,EAAOE,OAAOC,KAAKvH,GAAgB,cAAXA,EAAE8D,MACxC,GAAIuD,GAASA,EAAMG,OACjB,IAAK,IAAIlG,EAAI,EAAGA,EAAI+F,EAAMG,OAAOjG,OAAQD,IAAK,CAC5C,MAAMR,EAAMuG,EAAMG,OAAOzH,IAAIuB,GACzBR,GAAsB,iBAARA,GAChBqG,EAAOnG,KAAKF,EAEhB,IAKgB,IAAlBqG,EAAO5F,QAAgBsD,EAAQ4C,WACjCN,EAAS,CAACtC,EAAQ4C,WAEbN,GACN,CAACjD,EAAMW,EAAQ4C,YAGXC,EAAYC,IAAiBtC,EAAAA,EAAAA,UAAS4B,EAAK,IAAM,KAGxDW,EAAAA,EAAAA,WAAU,KACRD,EAAcV,EAAK,IAAM,IACzB7B,EAAgBnD,GAAS,OACpBA,GAAAA,CACHyD,WAAY,EACZH,SAAS,EACTC,aAAc,MAEhBM,EAAc7D,GAAS,OAClBA,GAAAA,CACHkE,kBAAmB,EACnBC,gBAAiB,KACjBL,YAAY,EACZC,UAAW,KACXK,sBAAuB,SAExB,CAACY,IAGJ,MAAMY,GAAwCX,EAAAA,EAAAA,SAAQ,IAC/CrC,EAAQiD,gBAAmBjD,EAAQkD,gBAGjC,CACLC,QAASnD,EAAQkD,iBAHV,KAKR,CAAClD,EAAQiD,eAAgBjD,EAAQkD,kBAE9BE,GAAkCf,EAAAA,EAAAA,SAAQ,IACzCrC,EAAQqD,aAAgBrD,EAAQsD,SAAYtD,EAAQuD,cAGlD,CACLC,OAAQxD,EAAQyD,aAAe,cAC/BC,KAAM1D,EAAQ2D,WAAa,IAC3BC,SAAU5D,EAAQuD,cAClBM,SAAU7D,EAAQ8D,eAAiB,GACnCC,GAAI/D,EAAQsD,QACZU,QAAShE,EAAQiE,cAAgB,6BAR1B,KAUR,CAACjE,EAAQqD,YAAarD,EAAQsD,QAAStD,EAAQuD,cAAevD,EAAQyD,YAAazD,EAAQ2D,UAAW3D,EAAQ8D,cAAe9D,EAAQiE,eAGlIC,GAAgCpC,EAAAA,EAAAA,aAAY,CAAO/D,EAAyCiB,KAAAA,O,EAAAA,YAEhG,MAAMmF,EAAM,IAAIpD,KAChB,GAAIC,EAAWQ,uBACX,EAAK4C,UAAYpD,EAAWQ,sBAAsB4C,UAAa,IACjE,OAGF,MAAMC,EAAuB,CAC3BtG,OACAiB,UACAsF,UAAWzB,EACX0B,UAAWJ,EACXK,WAAYxD,EAAWM,kBACvBT,WAAYP,EAAaO,YAG3B,SDC6B,EAC/BmC,EACAI,EACAqB,IAAAA,EAAAA,YAEA,MAAM/I,EAAoC,GAU1C,GARIsH,GAAkBA,EAAeG,SACnCzH,EAASS,KAlIoB,EAAOuI,EAAwBD,IAAAA,EAAAA,YAC9D,IACE,MAAMzF,EAAU,CACd2F,QAAS,WACTC,SAAU,CACRC,MAAO,WAAWJ,EAAM1G,OACxB+G,KAAM,8BAEFjF,EAAiB4E,EAAM1G,oBACvB0G,EAAMF,UAAUQ,8BACjBN,EAAMH,wBACLG,EAAMzF,sBACNyF,EAAMD,yBACNC,EAAM5D,8BAMRmE,QAAiBC,MAAMP,EAAOvB,QAAS,CAC3C+B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUtG,KAGvB,IAAKgG,EAASO,GAEZ,OADAC,QAAQ5G,MAAM,YAAaoG,EAASS,aAC7B,EAGT,MAAMnD,QAAe0C,EAASU,OAC9B,OAAuB,IAAnBpD,EAAOqD,SACTH,QAAQ5G,MAAM,YAAa0D,EAAOsD,SAC3B,IAGTJ,QAAQK,IAAI,aACL,EACT,CAAE,MAAOjH,GAEP,OADA4G,QAAQ5G,MAAM,YAAaA,IACpB,CACT,CACF,EA5CgE6F,GAkI9CqB,CAAkB9C,EAAgByB,IAG9CrB,GAAeA,EAAYW,IAC7BrI,EAASS,KAvFiB,EAAOuI,EAAqBD,IAAAA,EAAAA,YACxD,IAEE,MAAMT,EAAUU,EAAOV,QACpB+B,QAAQ,SAAUlG,EAAiB4E,EAAM1G,OACzCgI,QAAQ,YAAatB,EAAMzF,SAExBgH,EAAe,yqBA0DH,CAACjI,IACrB,OAAQA,GACN,IAAK,QAEL,IAAK,aAAc,MAAO,QAD1B,IAAK,SAAU,MAAO,UAEtB,QAAS,MAAO,SA9CEkI,CAAcxB,EAAM1G,8GAEiB8B,EAAiB4E,EAAM1G,yEACvB0G,EAAMF,UAAUQ,mFACjBN,EAAMH,6EACLG,EAAMzF,2EACNyF,EAAMD,8EACNC,EAAM5D,gIAQ7D,GAAI,WAAYqF,UAAW,CACzB,MAAMC,EAAa,UAAUzB,EAAOX,cAAcqC,mBAAmBpC,WAAiBoC,mBAAmBJ,KAEzG,OADAK,OAAOC,KAAKH,IACL,CACT,CAIA,OADAX,QAAQe,KAAK,+BACN,CAET,CAAE,MAAO3H,GAEP,OADA4G,QAAQ5G,MAAM,YAAaA,IACpB,CACT,CACF,EArD0D6F,GAuFxC+B,CAAepD,EAAaqB,IAGxC/I,EAASgB,OAAS,EACpB,UACQpB,QAAQmL,WAAW/K,EAC3B,CAAE,MAAOkD,GACP4G,QAAQ5G,MAAM,YAAaA,EAC7B,CAEJ,EAnBE6F,GCHUiC,CAAkB1D,EAAgBI,EAAaiB,GACrDpD,EAAc7D,GAAS,OAClBA,GAAAA,CACHoE,sBAAuB2C,IAE3B,CAAE,MAAOvF,GACPiD,EAAe,cAAgBjD,aAAiBC,MAAQD,EAAMI,QAAU2H,OAAO/H,KAC/E4G,QAAQ5G,MAAM,YAAaA,EAC7B,CACF,E,sLAAG,CAACoE,EAAgBI,EAAaP,EAAY7B,EAAWM,kBAAmBhB,EAAaO,WAAYG,EAAWQ,sBAAuBK,IAGhI+E,GAAe9E,EAAAA,EAAAA,aAAY,CAAC/D,EAAyCiB,KACpEgB,EAAQ6G,eAEb5F,EAAc7D,GAAS,OAClBA,GAAAA,CACH8D,YAAY,EACZC,UAAWpD,EACXqD,aAAcpC,EACdqC,UAAW,IAAIN,QAIbf,EAAQ8G,YAAczG,EAAS5F,SACjC4F,EAAS5F,QAAQsM,OAAOC,MAAO5L,IAC7ByG,EAAe,cAAgBzG,aAAayD,MAAQzD,EAAE4D,QAAU2H,OAAOvL,KAEvEoK,QAAQK,IAAI,cAKhB3B,EAA8BnG,EAAMiB,GACpC6C,EAAe,UAAU9D,MAASiB,OACjC,CAACgB,EAAQ6G,aAAc7G,EAAQ8G,WAAY5C,EAA+BrC,IAEvEoF,GAAanF,EAAAA,EAAAA,aAAY,KAC7Bb,EAAc7D,GAAS,OAClBA,GAAAA,CACH8D,YAAY,EACZC,UAAW,KACXC,aAAc,OAEf,IAuNH,OApNA2B,EAAAA,EAAAA,WAAU,KACR,GAAK/C,EAAQ6G,cAAiB7G,EAAQkH,gBAEtC,GAAI5G,EAAaM,YACf,GAAKI,EAAWO,gBAET,CACL,MAAM4F,IAAkB,IAAIpG,MAAOqD,UAAYpD,EAAWO,gBAAgB6C,WAAa,IACnF+C,EAAiBnH,EAAQkH,iBAC3BN,EAAa,SAAU,WAAWQ,KAAKC,MAAMF,MAEjD,MANElG,EAAc7D,GAAS,OAAKA,GAAAA,CAAMmE,gBAAiB,IAAIR,aAQzDE,EAAc7D,GAAS,OAAKA,GAAAA,CAAMmE,gBAAiB,QACtB,WAAzBP,EAAWG,WACb8F,KAGH,CAAC3G,EAAaM,YAAaZ,EAAQkH,gBAAiBlH,EAAQ6G,aAAc7F,EAAWO,gBAAiBP,EAAWG,UAAWyF,EAAcK,KAG7IlE,EAAAA,EAAAA,WAAU,KACR,GAAK/C,EAAQ6G,cAAiB7G,EAAQsH,eAEtC,GAAIhH,EAAaI,QAAS,CACxB,MAAM6G,EAAgBvG,EAAWM,kBAAoB,EACrDL,EAAc7D,GAAS,OAAKA,GAAAA,CAAMkE,kBAAmBiG,KAEjDA,GAAiBvH,EAAQsH,gBAC3BV,EAAa,QAAS,OAAOW,OAAmBjH,EAAaK,eAEjE,MACEM,EAAc7D,GAAS,OAAKA,GAAAA,CAAMkE,kBAAmB,KACxB,UAAzBN,EAAWG,WACb8F,KAGH,CAAC3G,EAAaI,QAASJ,EAAaK,aAAcX,EAAQsH,eAAgBtH,EAAQ6G,aAAc7F,EAAWM,kBAAmBN,EAAWG,UAAWyF,EAAcK,KAGrKlE,EAAAA,EAAAA,WAAU,KACR,MAAMyE,EAAQrH,EAAS1F,QACvB,IAAK+M,EAAQ,OAEb,MAAMC,EAAa,KACjBlH,EAAgBnD,GAAS,OACpBA,GAAAA,CACHqD,WAAW,EACXC,SAAS,EACTC,aAAc,GACdG,WAAY,IAAIC,QAElBkG,KAGIS,EAAc,KAClBnH,EAAgBnD,GAAS,OACpBA,GAAAA,CACHqD,WAAW,EACXK,WAAY,IAAIC,SAId4G,EAAc,K,IAQSH,EAP3BjH,EAAgBnD,I,IAISoK,E,OAJA,OACpBpK,GAAAA,CACHsD,SAAS,EACTD,WAAW,EACXE,aAAc,UAAoB,QAAX6G,EAAAA,EAAM5I,aAAN4I,IAAAA,OAAAA,EAAAA,EAAaxI,UAAW,SAC/C8B,WAAY,IAAIC,SAElBc,EAAe,WAAuB,QAAX2F,EAAAA,EAAM5I,aAAN4I,IAAAA,OAAAA,EAAAA,EAAaxI,UAAW,UAG/C4I,EAAgB,KACpBrH,EAAgBnD,GAAS,OACpBA,GAAAA,CACHwD,aAAa,EACbE,WAAY,IAAIC,SAId8G,EAAgB,KACpBtH,EAAgBnD,GAAS,OACpBA,GAAAA,CACHwD,aAAa,EACbE,WAAY,IAAIC,SAId+G,EAAgB,KACpBlB,EAAa,aAAc,UAU7B,OAPAY,EAAMO,iBAAiB,OAAQN,GAC/BD,EAAMO,iBAAiB,QAASL,GAChCF,EAAMO,iBAAiB,QAASJ,GAChCH,EAAMO,iBAAiB,UAAWH,GAClCJ,EAAMO,iBAAiB,UAAWF,GAClCL,EAAMO,iBAAiB,UAAWD,GAE3B,KACLN,EAAMQ,oBAAoB,OAAQP,GAClCD,EAAMQ,oBAAoB,QAASN,GACnCF,EAAMQ,oBAAoB,QAASL,GACnCH,EAAMQ,oBAAoB,UAAWJ,GACrCJ,EAAMQ,oBAAoB,UAAWH,GACrCL,EAAMQ,oBAAoB,UAAWF,KAEtC,CAAClB,EAAcK,EAAYpF,KAG9BkB,EAAAA,EAAAA,WAAU,KACR,IAAK5C,EAAS1F,UAAYoI,EACxB,OAEF,MAAM2E,EAAQrH,EAAS1F,QACvB,IAAIwN,EAAW,KACXC,EAAiB,KA2ErB,MAxEI,gBAAgBC,KAAKtF,GACvB,6BAAiBzI,KAAKgO,IACpB,MAAMC,EAAMD,EAAUE,QAClBD,EAAIE,eACNN,EAAM,IAAII,EAAI,CACZG,OAAO,EACPC,cAAc,EACdC,gBAAgB,IAGlBT,EAAIU,GAAGN,EAAIO,OAAOC,gBAAiB,KACjCtI,EAAgBnD,GAAS,OACpBA,GAAAA,CACHsD,SAAS,EACTC,aAAc,QAIlBsH,EAAIU,GAAGN,EAAIO,OAAOE,MAAO,CAACzL,EAAYgC,KACpCkB,EAAgBnD,GAAS,OACpBA,GAAAA,CACHsD,SAAS,EACTC,aAAc,UAAUtB,EAAK0J,UAC7BlI,WAAYzD,EAAKyD,WAAa,KAEhCgB,EAAe,UAAYxC,EAAK0J,WAGlCd,EAAIe,WAAWnG,GACfoF,EAAIgB,YAAYzB,IACPA,EAAM0B,YAAY,mCAC3B1B,EAAMtK,IAAM2F,KAGP,eAAesF,KAAKtF,IAAeA,EAAWsG,WAAW,QAClE,kCAAiB/O,KAAKgP,IACpB,MAAMC,EAAQD,EAAUd,QACpBe,EAAMd,gBACRL,EAAYmB,EAAMC,aAAa,CAC7BvL,KAAM,MACN9B,IAAK4G,EACL0G,UAAU,EACVC,UAAU,IAGZtB,EAAUS,GAAGU,EAAMT,OAAOa,iBAAkB,KAC1ClJ,EAAgBnD,GAAS,OACpBA,GAAAA,CACHsD,SAAS,EACTC,aAAc,QAIlBuH,EAAUS,GAAGU,EAAMT,OAAOE,MAAO,CAAChK,EAAgB4K,KAChDnJ,EAAgBnD,GAAS,OACpBA,GAAAA,CACHsD,SAAS,EACTC,aAAc,UAAU+I,IACxB7I,WAAYzD,EAAKyD,WAAa,KAEhCgB,EAAe,UAAY6H,KAG7BxB,EAAUyB,mBAAmBnC,GAC7BU,EAAU0B,OACV1B,EAAUnB,UAIdS,EAAMtK,IAAM2F,EAGP,KACDoF,GACFA,EAAI4B,UAEF3B,GACFA,EAAU2B,YAGb,CAAChH,EAAYhB,IAYd,kBAACiI,MAAAA,CAAIC,MAAO,CACV9J,QACAC,SACA8J,SAAU,WACVC,WAAY,OACZC,SAAU,WAEV,kBAAC1C,QAAAA,CACC2C,IAAKhK,EACL4J,MAAO,CACLC,SAAU,WACVI,IAAK,EACLC,KAAM,EACNpK,MAAO,OACPC,OAAQ,kBACRoK,SAAU,OACVC,UAAW,OACXC,UAAW,QACXC,QAAS,QACTR,WAAY,OACZS,OAAQ,GAEVC,UAAAA,EACAC,UAAAA,IAIF,kBAACC,QAAAA,CAAMV,IAAK9J,EAAUyK,QAAQ,QAC5B,kBAACC,SAAAA,CAAO7N,IAAI,0QAA0Qa,KAAK,eAI5RqE,EAAK1F,OAAS,GACb,kBAACsO,SAAAA,CACCjB,MAAO,CAAEC,SAAU,WAAYU,OAAQ,EAAGN,IAAK,GAAIC,KAAM,IACzDpQ,MAAO4I,EACPoI,SAAW7P,GAAsC0H,EAAc1H,EAAE4C,OAAO/D,QAEvEmI,EAAK8I,IAAI,CAACjP,EAAKkP,IACd,kBAACC,SAAAA,CAAOnR,MAAOgC,EAAKpB,IAAKoB,EAAMkP,GAC5BlP,KAOT,kBAAC6N,MAAAA,CACCC,MAAO,CACLC,SAAU,WACVI,IAAK,GACLiB,MAAO,GACPpB,WAAY,kBACZqB,MAAO,QACPC,QAAS,WACTC,aAAc,MACdC,SAAU,OACVf,OAAQ,EACRJ,SAAU,UAGZ,kBAACR,MAAAA,CAAIC,MAAO,CAAEU,QAAS,OAAQiB,WAAY,SAAUC,aAAc,QACjE,kBAAC7B,MAAAA,CACCC,MAAO,CACL9J,MAAO,MACPC,OAAQ,MACRsL,aAAc,MACdvB,WA3ENjJ,EAAWE,WAAoB,UAC/BZ,EAAaI,QAAiB,UAC9BJ,EAAaM,YAAqB,UAClCN,EAAaG,UAAmB,UAC7B,UAwEGmL,YAAa,MACbC,UAAW7K,EAAWE,WAAa,oBAAsB,UAG7D,kBAAC4K,OAAAA,KACE9K,EAAWE,WAAa,MACxBZ,EAAaI,QAAU,KACvBJ,EAAaM,YAAc,MAC3BN,EAAaG,UAAY,MAAQ,QAGrCO,EAAWE,YACV,kBAAC4I,MAAAA,CAAIC,MAAO,CAAEuB,MAAO,UAAWG,SAAU,OAAQM,UAAW,QAC1D/K,EAAWI,cAGfd,EAAaI,UAAYM,EAAWE,YACnC,kBAAC4I,MAAAA,CAAIC,MAAO,CAAEuB,MAAO,UAAWG,SAAU,OAAQM,UAAW,QAC1DzL,EAAaK,cAGlB,kBAACmJ,MAAAA,CAAIC,MAAO,CAAE0B,SAAU,OAAQH,MAAO,OAAQS,UAAW,QAAS,OAC5DzL,EAAaO,WAAW,UACxBG,EAAWM,kBAAkB,UAC7BhB,EAAaQ,WAAWoB,uBAG7Bc,GAAkBI,IAClB,kBAAC0G,MAAAA,CAAIC,MAAO,CAAE0B,SAAU,OAAQH,MAAO,OAAQS,UAAW,QACvD/I,GAAkB,MAClBI,GAAe,MAAM,UAO3BpC,EAAWE,YAAclB,EAAQgM,aAChC,kBAAClC,MAAAA,CACCC,MAAO,CACLC,SAAU,WACVI,IAAK,EACLC,KAAM,EACNgB,MAAO,EACPY,OAAQ,EACRhC,WAAY,uBACZiC,OAAQ,oBACRxB,OAAQ,EACRmB,UAAW,yBAMhBpK,EAAU/E,OAAS,GAClB,kBAACoN,MAAAA,CAAIC,MAAO,CACVC,SAAU,WACVK,KAAM,GACN4B,OAAQ,GACRZ,MAAO,GACPpB,WAAY,sBACZqB,MAAO,UACPG,SAAU,OACVD,aAAc,MACdD,QAAS,MACTb,OAAQ,GACRxK,OAAQyB,EAAc,QAAU,OAChCwK,UAAW,QACXC,UAAWzK,EAAc,OAAS,SAClC0K,OAAQ,UACRC,WAAY,cACZC,cAAe,QAEjBC,QAAS,IAAM5K,EAAe6K,IAAMA,GACpC5H,MAAOlD,EAAc,OAAS,YAE5B,kBAACmI,MAAAA,CAAIC,MAAO,CAAE2C,WAAY,OAAQpB,MAAO,OAAQK,aAAc,EAAGlB,QAAS,OAAQiB,WAAY,WAAY,OAEzG,kBAACI,OAAAA,CAAK/B,MAAO,CAAE4C,WAAY,EAAGlB,SAAU,GAAIH,MAAO,SAAW3J,EAAc,SAAW,WAExFA,EACGF,EAAUyJ,IAAI,CAACrF,EAAKsF,IAClB,kBAACrB,MAAAA,CAAIjP,IAAKsQ,EAAKpB,MAAO,CAAE4B,aAAc,IACpC,kBAACG,OAAAA,CAAK/B,MAAO,CAAEuB,MAAO,SAAU,IAAEzF,EAAI5D,KAAK,KAAQ,IAAE4D,EAAI7G,UAI3D,kBAAC8K,MAAAA,KACC,kBAACgC,OAAAA,CAAK/B,MAAO,CAAEuB,MAAO,SAAU,IAAE7J,EAAUA,EAAU/E,OAAO,GAAGuF,KAAK,KAAQ,IAAER,EAAUA,EAAU/E,OAAO,GAAGsC,UAOzH,kBAAC+K,QAAAA,KACE,k6BCvjByD6C,gBAAiBC,GAC1EA,EACJC,aAAa,CACZC,KAAM,OACN9N,KAAM,qBACN+N,YAAa,8BACbC,aAAc,uCAEfC,iBAAiB,CAChBH,KAAM,kBACN9N,KAAM,sBACNgO,cAAc,IAEfE,SAAS,CACRJ,KAAM,kBACNE,aAAc,KACdhO,KAAM,sBACNmO,SAAU,CACRpN,QAAS,CACP,CACE/F,MAAO,KACPoT,MAAO,SAET,CACEpT,MAAO,KACPoT,MAAO,UAET,CACEpT,MAAO,KACPoT,MAAO,WAIbC,OAAS5I,GAAWA,EAAO6I,kBAE5BT,aAAa,CACZC,KAAM,WACN9N,KAAM,QACN+N,YAAa,sBACbC,aAAc,KAEfC,iBAAiB,CAChBH,KAAM,eACN9N,KAAM,OACN+N,YAAa,YACbC,cAAc,IAEfO,eAAe,CACdT,KAAM,iBACN9N,KAAM,OACN+N,YAAa,kBACbC,aAAc,EACdK,OAAS5I,GAAWA,EAAOmC,eAE5B2G,eAAe,CACdT,KAAM,kBACN9N,KAAM,UACN+N,YAAa,gBACbC,aAAc,GACdK,OAAS5I,GAAWA,EAAOmC,eAE5BqG,iBAAiB,CAChBH,KAAM,aACN9N,KAAM,OACN+N,YAAa,WACbC,cAAc,EACdK,OAAS5I,GAAWA,EAAOmC,eAE5BqG,iBAAiB,CAChBH,KAAM,cACN9N,KAAM,OACN+N,YAAa,WACbC,cAAc,EACdK,OAAS5I,GAAWA,EAAOmC,eAE5BqG,iBAAiB,CAChBH,KAAM,iBACN9N,KAAM,OACN+N,YAAa,YACbC,cAAc,EACdK,OAAS5I,GAAWA,EAAOmC,eAE5BiG,aAAa,CACZC,KAAM,kBACN9N,KAAM,aACN+N,YAAa,oBACbC,aAAc,GACdK,OAAS5I,GAAWA,EAAOmC,cAAgBnC,EAAOzB,iBAEnDiK,iBAAiB,CAChBH,KAAM,cACN9N,KAAM,OACN+N,YAAa,SACbC,cAAc,EACdK,OAAS5I,GAAWA,EAAOmC,eAE5BiG,aAAa,CACZC,KAAM,cACN9N,KAAM,WACN+N,YAAa,gBACbC,aAAc,cACdK,OAAS5I,GAAWA,EAAOmC,cAAgBnC,EAAOrB,cAEnDmK,eAAe,CACdT,KAAM,YACN9N,KAAM,UACN+N,YAAa,aACbC,aAAc,IACdK,OAAS5I,GAAWA,EAAOmC,cAAgBnC,EAAOrB,cAEnDyJ,aAAa,CACZC,KAAM,gBACN9N,KAAM,QACN+N,YAAa,UACbC,aAAc,GACdK,OAAS5I,GAAWA,EAAOmC,cAAgBnC,EAAOrB,cAEnDyJ,aAAa,CACZC,KAAM,gBACN9N,KAAM,OACN+N,YAAa,WACbC,aAAc,GACdK,OAAS5I,GAAWA,EAAOmC,cAAgBnC,EAAOrB,cAEnDyJ,aAAa,CACZC,KAAM,UACN9N,KAAM,QACN+N,YAAa,cACbC,aAAc,GACdK,OAAS5I,GAAWA,EAAOmC,cAAgBnC,EAAOrB,cAEnDyJ,aAAa,CACZC,KAAM,eACN9N,KAAM,OACN+N,YAAa,kCACbC,aAAc,4BACdK,OAAS5I,GAAWA,EAAOmC,cAAgBnC,EAAOrB,e","sources":["webpack://maskedlaodi-stream-live-panel/webpack/runtime/create fake namespace object","webpack://maskedlaodi-stream-live-panel/webpack/runtime/load script","webpack://maskedlaodi-stream-live-panel/external amd \"@grafana/data\"","webpack://maskedlaodi-stream-live-panel/external amd \"react\"","webpack://maskedlaodi-stream-live-panel/webpack/bootstrap","webpack://maskedlaodi-stream-live-panel/webpack/runtime/compat get default export","webpack://maskedlaodi-stream-live-panel/webpack/runtime/define property getters","webpack://maskedlaodi-stream-live-panel/webpack/runtime/ensure chunk","webpack://maskedlaodi-stream-live-panel/webpack/runtime/get javascript chunk filename","webpack://maskedlaodi-stream-live-panel/webpack/runtime/hasOwnProperty shorthand","webpack://maskedlaodi-stream-live-panel/webpack/runtime/make namespace object","webpack://maskedlaodi-stream-live-panel/webpack/runtime/publicPath","webpack://maskedlaodi-stream-live-panel/webpack/runtime/jsonp chunk loading","webpack://maskedlaodi-stream-live-panel/./services/alertService.ts","webpack://maskedlaodi-stream-live-panel/./components/SimplePanel.tsx","webpack://maskedlaodi-stream-live-panel/./module.ts"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"maskedlaodi-stream-live-panel:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/maskedlaodi-stream-live-panel/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t231: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmaskedlaodi_stream_live_panel\"] = self[\"webpackChunkmaskedlaodi_stream_live_panel\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// 报警服务 - 处理外部报警通知\n\nexport interface AlertInfo {\n  type: 'error' | 'buffer' | 'connection';\n  message: string;\n  streamUrl: string;\n  timestamp: Date;\n  errorCount: number;\n  retryCount: number;\n}\n\nexport interface DingTalkConfig {\n  webhook: string;\n}\n\nexport interface EmailConfig {\n  server: string;\n  port: number;\n  username: string;\n  password: string;\n  to: string;\n  subject: string;\n}\n\n// 钉钉报警\nexport const sendDingTalkAlert = async (config: DingTalkConfig, alert: AlertInfo): Promise<boolean> => {\n  try {\n    const message = {\n      msgtype: 'markdown',\n      markdown: {\n        title: `直播流报警 - ${alert.type}`,\n        text: `## 🚨 直播流报警通知\n\n**报警类型:** ${getAlertTypeText(alert.type)}\n**报警时间:** ${alert.timestamp.toLocaleString()}\n**流地址:** ${alert.streamUrl}\n**错误信息:** ${alert.message}\n**错误次数:** ${alert.errorCount}\n**重试次数:** ${alert.retryCount}\n\n请及时检查直播流状态！`\n      }\n    };\n\n    const response = await fetch(config.webhook, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(message),\n    });\n\n    if (!response.ok) {\n      console.error('钉钉报警发送失败:', response.statusText);\n      return false;\n    }\n\n    const result = await response.json();\n    if (result.errcode !== 0) {\n      console.error('钉钉报警发送失败:', result.errmsg);\n      return false;\n    }\n\n    console.log('钉钉报警发送成功');\n    return true;\n  } catch (error) {\n    console.error('钉钉报警发送异常:', error);\n    return false;\n  }\n};\n\n// 邮箱报警\nexport const sendEmailAlert = async (config: EmailConfig, alert: AlertInfo): Promise<boolean> => {\n  try {\n    // 构建邮件内容\n    const subject = config.subject\n      .replace('{type}', getAlertTypeText(alert.type))\n      .replace('{message}', alert.message);\n\n    const emailContent = `\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>直播流报警通知</title>\n  <style>\n    body { font-family: Arial, sans-serif; margin: 20px; }\n    .alert { background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; }\n    .error { background-color: #f8d7da; border: 1px solid #f5c6cb; }\n    .info { background-color: #d1ecf1; border: 1px solid #bee5eb; }\n    .warning { background-color: #fff3cd; border: 1px solid #ffeaa7; }\n    .title { color: #721c24; font-size: 18px; font-weight: bold; margin-bottom: 10px; }\n    .detail { margin: 5px 0; }\n    .label { font-weight: bold; color: #495057; }\n  </style>\n</head>\n<body>\n  <div class=\"alert ${getAlertClass(alert.type)}\">\n    <div class=\"title\">🚨 直播流报警通知</div>\n    <div class=\"detail\"><span class=\"label\">报警类型:</span> ${getAlertTypeText(alert.type)}</div>\n    <div class=\"detail\"><span class=\"label\">报警时间:</span> ${alert.timestamp.toLocaleString()}</div>\n    <div class=\"detail\"><span class=\"label\">流地址:</span> ${alert.streamUrl}</div>\n    <div class=\"detail\"><span class=\"label\">错误信息:</span> ${alert.message}</div>\n    <div class=\"detail\"><span class=\"label\">错误次数:</span> ${alert.errorCount}</div>\n    <div class=\"detail\"><span class=\"label\">重试次数:</span> ${alert.retryCount}</div>\n    <br>\n    <div style=\"color: #721c24; font-weight: bold;\">请及时检查直播流状态！</div>\n  </div>\n</body>\n</html>`;\n\n    // 使用浏览器内置的邮件功能（如果支持）\n    if ('mailto' in navigator) {\n      const mailtoLink = `mailto:${config.to}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(emailContent)}`;\n      window.open(mailtoLink);\n      return true;\n    }\n\n    // 如果浏览器不支持 mailto，尝试使用 SMTP（需要后端支持）\n    console.warn('浏览器不支持直接发送邮件，请配置后端 SMTP 服务');\n    return false;\n\n  } catch (error) {\n    console.error('邮箱报警发送异常:', error);\n    return false;\n  }\n};\n\n// 辅助函数\nconst getAlertTypeText = (type: string): string => {\n  switch (type) {\n    case 'error': return '播放错误';\n    case 'buffer': return '缓冲超时';\n    case 'connection': return '连接中断';\n    default: return '未知错误';\n  }\n};\n\nconst getAlertClass = (type: string): string => {\n  switch (type) {\n    case 'error': return 'error';\n    case 'buffer': return 'warning';\n    case 'connection': return 'error';\n    default: return 'info';\n  }\n};\n\n// 统一报警接口\nexport const sendExternalAlert = async (\n  dingTalkConfig: DingTalkConfig | null,\n  emailConfig: EmailConfig | null,\n  alert: AlertInfo\n): Promise<void> => {\n  const promises: Array<Promise<boolean>> = [];\n\n  if (dingTalkConfig && dingTalkConfig.webhook) {\n    promises.push(sendDingTalkAlert(dingTalkConfig, alert));\n  }\n\n  if (emailConfig && emailConfig.to) {\n    promises.push(sendEmailAlert(emailConfig, alert));\n  }\n\n  if (promises.length > 0) {\n    try {\n      await Promise.allSettled(promises);\n    } catch (error) {\n      console.error('外部报警发送失败:', error);\n    }\n  }\n}; \n","import React, { useEffect, useRef, useState, ChangeEvent, useMemo, useCallback } from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport { sendExternalAlert, AlertInfo, DingTalkConfig, EmailConfig } from '../services/alertService';\n\ninterface Props extends PanelProps<SimpleOptions> {}\n\ninterface StreamStatus {\n  isPlaying: boolean;\n  isError: boolean;\n  errorMessage: string;\n  isBuffering: boolean;\n  retryCount: number;\n  lastUpdate: Date;\n}\n\ninterface AlertState {\n  isAlerting: boolean;\n  alertType: 'error' | 'buffer' | 'connection' | null;\n  alertMessage: string;\n  alertTime: Date | null;\n  consecutiveErrors: number;\n  bufferStartTime: Date | null;\n  lastExternalAlertTime: Date | null; // 防止重复发送外部报警\n}\n\nexport const SimplePanel: React.FC<Props> = ({ options, data, width, height }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  \n  const [streamStatus, setStreamStatus] = useState<StreamStatus>({\n    isPlaying: false,\n    isError: false,\n    errorMessage: '',\n    isBuffering: false,\n    retryCount: 0,\n    lastUpdate: new Date(),\n  });\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    isAlerting: false,\n    alertType: null,\n    alertMessage: '',\n    alertTime: null,\n    consecutiveErrors: 0,\n    bufferStartTime: null,\n    lastExternalAlertTime: null,\n  });\n\n  // 错误日志，最多显示10条\n  const [errorLogs, setErrorLogs] = useState<Array<{ time: string; message: string }>>([]);\n  const [showAllLogs, setShowAllLogs] = useState(false);\n  const appendErrorLog = useCallback((msg: string) => {\n    setErrorLogs(prev => {\n      const newLogs = [...prev, { time: new Date().toLocaleTimeString(), message: msg }];\n      return newLogs.length > 10 ? newLogs.slice(-10) : newLogs;\n    });\n  }, []);\n\n  // 1. 解析所有 video_url\n  const urls = useMemo(() => {\n    let result: string[] = [];\n    if (data && data.series && data.series.length > 0) {\n      data.series.forEach(series => {\n        const field = series.fields.find(f => f.name === 'video_url');\n        if (field && field.values) {\n          for (let i = 0; i < field.values.length; i++) {\n            const url = field.values.get(i);\n            if (url && typeof url === 'string') {\n              result.push(url);\n            }\n          }\n        }\n      });\n    }\n    // 若无数据则用 options.videoUrl\n    if (result.length === 0 && options.videoUrl) {\n      result = [options.videoUrl];\n    }\n    return result;\n  }, [data, options.videoUrl]);\n\n  // 2. 当前选中流\n  const [currentUrl, setCurrentUrl] = useState(urls[0] || '');\n\n  // 3. 切换流时更新 currentUrl\n  useEffect(() => {\n    setCurrentUrl(urls[0] || '');\n    setStreamStatus(prev => ({\n      ...prev,\n      retryCount: 0,\n      isError: false,\n      errorMessage: '',\n    }));\n    setAlertState(prev => ({\n      ...prev,\n      consecutiveErrors: 0,\n      bufferStartTime: null,\n      isAlerting: false,\n      alertType: null,\n      lastExternalAlertTime: null,\n    }));\n  }, [urls]);\n\n  // 4. 外部报警配置\n  const dingTalkConfig: DingTalkConfig | null = useMemo(() => {\n    if (!options.enableDingTalk || !options.dingTalkWebhook) {\n      return null;\n    }\n    return {\n      webhook: options.dingTalkWebhook,\n    };\n  }, [options.enableDingTalk, options.dingTalkWebhook]);\n\n  const emailConfig: EmailConfig | null = useMemo(() => {\n    if (!options.enableEmail || !options.emailTo || !options.emailUsername) {\n      return null;\n    }\n    return {\n      server: options.emailServer || 'smtp.qq.com',\n      port: options.emailPort || 587,\n      username: options.emailUsername,\n      password: options.emailPassword || '',\n      to: options.emailTo,\n      subject: options.emailSubject || '直播流报警: {type} - {message}',\n    };\n  }, [options.enableEmail, options.emailTo, options.emailUsername, options.emailServer, options.emailPort, options.emailPassword, options.emailSubject]);\n\n  // 5. 发送外部报警\n  const sendExternalAlertNotification = useCallback(async (type: 'error' | 'buffer' | 'connection', message: string) => {\n    // 防止重复发送（5分钟内不重复发送）\n    const now = new Date();\n    if (alertState.lastExternalAlertTime && \n        (now.getTime() - alertState.lastExternalAlertTime.getTime()) < 5 * 60 * 1000) {\n      return;\n    }\n\n    const alertInfo: AlertInfo = {\n      type,\n      message,\n      streamUrl: currentUrl,\n      timestamp: now,\n      errorCount: alertState.consecutiveErrors,\n      retryCount: streamStatus.retryCount,\n    };\n\n    try {\n      await sendExternalAlert(dingTalkConfig, emailConfig, alertInfo);\n      setAlertState(prev => ({\n        ...prev,\n        lastExternalAlertTime: now,\n      }));\n    } catch (error) {\n      appendErrorLog('外部报警发送失败: ' + (error instanceof Error ? error.message : String(error)));\n      console.error('外部报警发送失败:', error);\n    }\n  }, [dingTalkConfig, emailConfig, currentUrl, alertState.consecutiveErrors, streamStatus.retryCount, alertState.lastExternalAlertTime, appendErrorLog]);\n\n  // 6. 报警逻辑\n  const triggerAlert = useCallback((type: 'error' | 'buffer' | 'connection', message: string) => {\n    if (!options.enableAlerts) {return;}\n\n    setAlertState(prev => ({\n      ...prev,\n      isAlerting: true,\n      alertType: type,\n      alertMessage: message,\n      alertTime: new Date(),\n    }));\n\n    // 声音报警\n    if (options.alertSound && audioRef.current) {\n      audioRef.current.play().catch((e) => {\n        appendErrorLog('播放报警声音失败: ' + (e instanceof Error ? e.message : String(e)));\n        // 如果无法播放声音，使用浏览器内置的提示音\n        console.log('播放报警声音失败');\n      });\n    }\n\n    // 发送外部报警\n    sendExternalAlertNotification(type, message);\n    appendErrorLog(`触发报警: [${type}] ${message}`);\n  }, [options.enableAlerts, options.alertSound, sendExternalAlertNotification, appendErrorLog]);\n\n  const clearAlert = useCallback(() => {\n    setAlertState(prev => ({\n      ...prev,\n      isAlerting: false,\n      alertType: null,\n      alertMessage: '',\n    }));\n  }, []);\n\n  // 7. 缓冲时间监控\n  useEffect(() => {\n    if (!options.enableAlerts || !options.bufferThreshold) {return;}\n    \n    if (streamStatus.isBuffering) {\n      if (!alertState.bufferStartTime) {\n        setAlertState(prev => ({ ...prev, bufferStartTime: new Date() }));\n      } else {\n        const bufferDuration = (new Date().getTime() - alertState.bufferStartTime.getTime()) / 1000;\n        if (bufferDuration > options.bufferThreshold) {\n          triggerAlert('buffer', `缓冲时间过长: ${Math.round(bufferDuration)}秒`);\n        }\n      }\n    } else {\n      setAlertState(prev => ({ ...prev, bufferStartTime: null }));\n      if (alertState.alertType === 'buffer') {\n        clearAlert();\n      }\n    }\n  }, [streamStatus.isBuffering, options.bufferThreshold, options.enableAlerts, alertState.bufferStartTime, alertState.alertType, triggerAlert, clearAlert]);\n\n  // 8. 错误计数监控\n  useEffect(() => {\n    if (!options.enableAlerts || !options.errorThreshold) {return;}\n\n    if (streamStatus.isError) {\n      const newErrorCount = alertState.consecutiveErrors + 1;\n      setAlertState(prev => ({ ...prev, consecutiveErrors: newErrorCount }));\n      \n      if (newErrorCount >= options.errorThreshold) {\n        triggerAlert('error', `连续错误${newErrorCount}次: ${streamStatus.errorMessage}`);\n      }\n    } else {\n      setAlertState(prev => ({ ...prev, consecutiveErrors: 0 }));\n      if (alertState.alertType === 'error') {\n        clearAlert();\n      }\n    }\n  }, [streamStatus.isError, streamStatus.errorMessage, options.errorThreshold, options.enableAlerts, alertState.consecutiveErrors, alertState.alertType, triggerAlert, clearAlert]);\n\n  // 9. 视频事件监听\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) {return;}\n\n    const handlePlay = () => {\n      setStreamStatus(prev => ({\n        ...prev,\n        isPlaying: true,\n        isError: false,\n        errorMessage: '',\n        lastUpdate: new Date(),\n      }));\n      clearAlert();\n    };\n\n    const handlePause = () => {\n      setStreamStatus(prev => ({\n        ...prev,\n        isPlaying: false,\n        lastUpdate: new Date(),\n      }));\n    };\n\n    const handleError = () => {\n      setStreamStatus(prev => ({\n        ...prev,\n        isError: true,\n        isPlaying: false,\n        errorMessage: `播放错误: ${video.error?.message || '未知错误'}`,\n        lastUpdate: new Date(),\n      }));\n      appendErrorLog('播放错误: ' + (video.error?.message || '未知错误'));\n    };\n\n    const handleWaiting = () => {\n      setStreamStatus(prev => ({\n        ...prev,\n        isBuffering: true,\n        lastUpdate: new Date(),\n      }));\n    };\n\n    const handleCanPlay = () => {\n      setStreamStatus(prev => ({\n        ...prev,\n        isBuffering: false,\n        lastUpdate: new Date(),\n      }));\n    };\n\n    const handleStalled = () => {\n      triggerAlert('connection', '流连接中断');\n    };\n\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('pause', handlePause);\n    video.addEventListener('error', handleError);\n    video.addEventListener('waiting', handleWaiting);\n    video.addEventListener('canplay', handleCanPlay);\n    video.addEventListener('stalled', handleStalled);\n\n    return () => {\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('pause', handlePause);\n      video.removeEventListener('error', handleError);\n      video.removeEventListener('waiting', handleWaiting);\n      video.removeEventListener('canplay', handleCanPlay);\n      video.removeEventListener('stalled', handleStalled);\n    };\n  }, [triggerAlert, clearAlert, appendErrorLog]);\n\n  // 10. 播放器逻辑\n  useEffect(() => {\n    if (!videoRef.current || !currentUrl) {\n      return;\n    }\n    const video = videoRef.current;\n    let hls: any = null;\n    let flvPlayer: any = null;\n\n    // 判断格式\n    if (/\\.m3u8($|\\?)/i.test(currentUrl)) {\n      import('hls.js').then(HlsModule => {\n        const Hls = HlsModule.default;\n        if (Hls.isSupported()) {\n          hls = new Hls({\n            debug: false,\n            enableWorker: true,\n            lowLatencyMode: true,\n          });\n          \n          hls.on(Hls.Events.MANIFEST_PARSED, () => {\n            setStreamStatus(prev => ({\n              ...prev,\n              isError: false,\n              errorMessage: '',\n            }));\n          });\n\n          hls.on(Hls.Events.ERROR, (event: any, data: any) => {\n            setStreamStatus(prev => ({\n              ...prev,\n              isError: true,\n              errorMessage: `HLS错误: ${data.details}`,\n              retryCount: prev.retryCount + 1,\n            }));\n            appendErrorLog('HLS错误: ' + data.details);\n          });\n\n          hls.loadSource(currentUrl);\n          hls.attachMedia(video);\n        } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n          video.src = currentUrl;\n        }\n      });\n    } else if (/\\.flv($|\\?)/i.test(currentUrl) || currentUrl.startsWith('rtmp')) {\n      import('flv.js').then(FlvModule => {\n        const flvjs = FlvModule.default;\n        if (flvjs.isSupported()) {\n          flvPlayer = flvjs.createPlayer({\n            type: 'flv',\n            url: currentUrl,\n            hasAudio: true,\n            hasVideo: true,\n          });\n\n          flvPlayer.on(flvjs.Events.LOADING_COMPLETE, () => {\n            setStreamStatus(prev => ({\n              ...prev,\n              isError: false,\n              errorMessage: '',\n            }));\n          });\n\n          flvPlayer.on(flvjs.Events.ERROR, (errorType: any, errorDetail: any) => {\n            setStreamStatus(prev => ({\n              ...prev,\n              isError: true,\n              errorMessage: `FLV错误: ${errorDetail}`,\n              retryCount: prev.retryCount + 1,\n            }));\n            appendErrorLog('FLV错误: ' + errorDetail);\n          });\n\n          flvPlayer.attachMediaElement(video);\n          flvPlayer.load();\n          flvPlayer.play();\n        }\n      });\n    } else {\n      video.src = currentUrl;\n    }\n    // 清理\n    return () => {\n      if (hls) {\n        hls.destroy();\n      }\n      if (flvPlayer) {\n        flvPlayer.destroy();\n      }\n    };\n  }, [currentUrl, appendErrorLog]);\n\n  // 11. 状态显示样式\n  const getStatusColor = () => {\n    if (alertState.isAlerting) {return '#ff0000';}\n    if (streamStatus.isError) {return '#ff4444';}\n    if (streamStatus.isBuffering) {return '#ffaa00';}\n    if (streamStatus.isPlaying) {return '#44ff44';}\n    return '#888888';\n  };\n\n  return (\n    <div style={{\n      width,\n      height,\n      position: 'relative',\n      background: '#000',\n      overflow: 'hidden'\n    }}>\n      <video\n        ref={videoRef}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100% !important',\n          minWidth: '100%',\n          minHeight: '100%',\n          objectFit: 'cover',\n          display: 'block',\n          background: '#000',\n          zIndex: 0\n        }}\n        controls\n        autoPlay\n      />\n\n      {/* 声音报警元素 */}\n      <audio ref={audioRef} preload=\"auto\">\n        <source src=\"data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBSuBzvLZiTYIG2m98OScTgwOUarm7blmGgU7k9n1unEiBC13yO/eizEIHWq+8+OWT\" type=\"audio/wav\" />\n      </audio>\n\n      {/* 流切换下拉框 */}\n      {urls.length > 1 && (\n        <select\n          style={{ position: 'absolute', zIndex: 2, top: 10, left: 10 }}\n          value={currentUrl}\n          onChange={(e: ChangeEvent<HTMLSelectElement>) => setCurrentUrl(e.target.value)}\n        >\n          {urls.map((url, idx) => (\n            <option value={url} key={url + idx}>\n              {url}\n            </option>\n          ))}\n        </select>\n      )}\n\n      {/* 状态监控面板 */}\n      <div\n        style={{\n          position: 'absolute',\n          top: 10,\n          right: 10,\n          background: 'rgba(0,0,0,0.8)',\n          color: 'white',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          fontSize: '12px',\n          zIndex: 2,\n          minWidth: '150px',\n        }}\n      >\n        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '4px' }}>\n          <div\n            style={{\n              width: '8px',\n              height: '8px',\n              borderRadius: '50%',\n              background: getStatusColor(),\n              marginRight: '6px',\n              animation: alertState.isAlerting ? 'blink 1s infinite' : 'none',\n            }}\n          />\n          <span>\n            {alertState.isAlerting ? '报警中' :\n             streamStatus.isError ? '错误' :\n             streamStatus.isBuffering ? '缓冲中' :\n             streamStatus.isPlaying ? '播放中' : '未播放'}\n          </span>\n        </div>\n        {alertState.isAlerting && (\n          <div style={{ color: '#ff6666', fontSize: '10px', marginTop: '4px' }}>\n            {alertState.alertMessage}\n          </div>\n        )}\n        {streamStatus.isError && !alertState.isAlerting && (\n          <div style={{ color: '#ff6666', fontSize: '10px', marginTop: '4px' }}>\n            {streamStatus.errorMessage}\n          </div>\n        )}\n        <div style={{ fontSize: '10px', color: '#ccc', marginTop: '4px' }}>\n          重试: {streamStatus.retryCount} | \n          错误: {alertState.consecutiveErrors} | \n          更新: {streamStatus.lastUpdate.toLocaleTimeString()}\n        </div>\n        {/* 外部报警状态 */}\n        {(dingTalkConfig || emailConfig) && (\n          <div style={{ fontSize: '10px', color: '#aaa', marginTop: '4px' }}>\n            {dingTalkConfig && '钉钉 '}\n            {emailConfig && '邮箱 '}\n            报警已配置\n          </div>\n        )}\n      </div>\n\n      {/* 视觉报警覆盖层 */}\n      {alertState.isAlerting && options.alertVisual && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background: 'rgba(255, 0, 0, 0.1)',\n            border: '3px solid #ff0000',\n            zIndex: 1,\n            animation: 'blink 0.5s infinite',\n          }}\n        />\n      )}\n\n      {/* 错误日志区域，浮在视频上方 */}\n      {errorLogs.length > 0 && (\n        <div style={{\n          position: 'absolute',\n          left: 10,\n          bottom: 10,\n          right: 10,\n          background: 'rgba(30,30,30,0.85)',\n          color: '#ffbaba',\n          fontSize: '12px',\n          borderRadius: '4px',\n          padding: '8px',\n          zIndex: 10,\n          height: showAllLogs ? '110px' : '28px',\n          maxHeight: '110px',\n          overflowY: showAllLogs ? 'auto' : 'hidden',\n          cursor: 'pointer',\n          transition: 'height 0.2s',\n          pointerEvents: 'auto',\n        }}\n        onClick={() => setShowAllLogs(v => !v)}\n        title={showAllLogs ? '点击收起' : '点击展开全部日志'}\n        >\n          <div style={{ fontWeight: 'bold', color: '#fff', marginBottom: 4, display: 'flex', alignItems: 'center' }}>\n            错误日志\n            <span style={{ marginLeft: 8, fontSize: 10, color: '#aaa' }}>{showAllLogs ? '（点击收起）' : '（点击展开）'}</span>\n          </div>\n          {showAllLogs\n            ? errorLogs.map((log, idx) => (\n                <div key={idx} style={{ marginBottom: 2 }}>\n                  <span style={{ color: '#aaa' }}>[{log.time}]</span> {log.message}\n                </div>\n              ))\n            : (\n                <div>\n                  <span style={{ color: '#aaa' }}>[{errorLogs[errorLogs.length-1].time}]</span> {errorLogs[errorLogs.length-1].message}\n                </div>\n              )\n          }\n        </div>\n      )}\n\n      <style>\n        {`\n          @keyframes blink {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n          }\n\n          .kuoxh-panel-content video {\n            position: absolute !important;\n            top: 0 !important;\n            left: 0 !important;\n            width: 100% !important;\n            height: 100% !important;\n            min-width: 100% !important;\n            min-height: 100% !important;\n            object-fit: cover !important;\n            background: #000 !important;\n            z-index: 0 !important;\n            display: block !important;\n          }\n\n          .kuoxh-panel-content {\n            height: 100% !important;\n            min-height: 100% !important;\n            padding: 0 !important;\n            margin: 0 !important;\n            position: relative !important;\n            background: #000 !important;\n          }\n        `}\n      </style>\n    </div>\n  );\n}; \n","import { PanelPlugin } from '@grafana/data';\nimport { SimpleOptions } from './types';\nimport { SimplePanel } from './components/SimplePanel';\n\nexport const plugin = new PanelPlugin<SimpleOptions>(SimplePanel).setPanelOptions((builder) => {\n  return builder\n    .addTextInput({\n      path: 'text',\n      name: 'Simple text option',\n      description: 'Description of panel option',\n      defaultValue: 'Default value of text input option',\n    })\n    .addBooleanSwitch({\n      path: 'showSeriesCount',\n      name: 'Show series counter',\n      defaultValue: false,\n    })\n    .addRadio({\n      path: 'seriesCountSize',\n      defaultValue: 'sm',\n      name: 'Series counter size',\n      settings: {\n        options: [\n          {\n            value: 'sm',\n            label: 'Small',\n          },\n          {\n            value: 'md',\n            label: 'Medium',\n          },\n          {\n            value: 'lg',\n            label: 'Large',\n          },\n        ],\n      },\n      showIf: (config) => config.showSeriesCount,\n    })\n    .addTextInput({\n      path: 'videoUrl',\n      name: '视频流地址',\n      description: '支持 m3u8、flv、rtmp 格式',\n      defaultValue: '',\n    })\n    .addBooleanSwitch({\n      path: 'enableAlerts',\n      name: '启用报警',\n      description: '启用流监控报警功能',\n      defaultValue: true,\n    })\n    .addNumberInput({\n      path: 'errorThreshold',\n      name: '错误阈值',\n      description: '连续错误次数达到此值时触发报警',\n      defaultValue: 3,\n      showIf: (config) => config.enableAlerts,\n    })\n    .addNumberInput({\n      path: 'bufferThreshold',\n      name: '缓冲阈值(秒)',\n      description: '缓冲时间超过此值时触发报警',\n      defaultValue: 10,\n      showIf: (config) => config.enableAlerts,\n    })\n    .addBooleanSwitch({\n      path: 'alertSound',\n      name: '声音报警',\n      description: '启用声音报警提示',\n      defaultValue: true,\n      showIf: (config) => config.enableAlerts,\n    })\n    .addBooleanSwitch({\n      path: 'alertVisual',\n      name: '视觉报警',\n      description: '启用视觉报警提示',\n      defaultValue: true,\n      showIf: (config) => config.enableAlerts,\n    })\n    .addBooleanSwitch({\n      path: 'enableDingTalk',\n      name: '钉钉报警',\n      description: '启用钉钉机器人报警',\n      defaultValue: false,\n      showIf: (config) => config.enableAlerts,\n    })\n    .addTextInput({\n      path: 'dingTalkWebhook',\n      name: '钉钉 Webhook',\n      description: '钉钉机器人 webhook URL',\n      defaultValue: '',\n      showIf: (config) => config.enableAlerts && config.enableDingTalk,\n    })\n    .addBooleanSwitch({\n      path: 'enableEmail',\n      name: '邮箱报警',\n      description: '启用邮箱报警',\n      defaultValue: false,\n      showIf: (config) => config.enableAlerts,\n    })\n    .addTextInput({\n      path: 'emailServer',\n      name: 'SMTP 服务器',\n      description: '邮箱 SMTP 服务器地址',\n      defaultValue: 'smtp.qq.com',\n      showIf: (config) => config.enableAlerts && config.enableEmail,\n    })\n    .addNumberInput({\n      path: 'emailPort',\n      name: 'SMTP 端口',\n      description: '邮箱 SMTP 端口',\n      defaultValue: 587,\n      showIf: (config) => config.enableAlerts && config.enableEmail,\n    })\n    .addTextInput({\n      path: 'emailUsername',\n      name: '邮箱用户名',\n      description: '发件人邮箱地址',\n      defaultValue: '',\n      showIf: (config) => config.enableAlerts && config.enableEmail,\n    })\n    .addTextInput({\n      path: 'emailPassword',\n      name: '邮箱密码',\n      description: '邮箱授权码或密码',\n      defaultValue: '',\n      showIf: (config) => config.enableAlerts && config.enableEmail,\n    })\n    .addTextInput({\n      path: 'emailTo',\n      name: '收件人邮箱',\n      description: '接收报警邮件的邮箱地址',\n      defaultValue: '',\n      showIf: (config) => config.enableAlerts && config.enableEmail,\n    })\n    .addTextInput({\n      path: 'emailSubject',\n      name: '邮件主题',\n      description: '报警邮件主题模板，支持 {type} {message} 变量',\n      defaultValue: '直播流报警: {type} - {message}',\n      showIf: (config) => config.enableAlerts && config.enableEmail,\n    });\n});\n"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","__esModule","d","a","Object","getPrototypeOf","obj","t","value","mode","this","then","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","type","target","head","appendChild","Symbol","toStringTag","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","Error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","self","getAlertTypeText","plugin","PanelPlugin","options","width","height","videoRef","useRef","audioRef","streamStatus","setStreamStatus","useState","isPlaying","isError","errorMessage","isBuffering","retryCount","lastUpdate","Date","alertState","setAlertState","isAlerting","alertType","alertMessage","alertTime","consecutiveErrors","bufferStartTime","lastExternalAlertTime","errorLogs","setErrorLogs","showAllLogs","setShowAllLogs","appendErrorLog","useCallback","msg","newLogs","time","toLocaleTimeString","slice","urls","useMemo","result","series","field","fields","find","values","videoUrl","currentUrl","setCurrentUrl","useEffect","dingTalkConfig","enableDingTalk","dingTalkWebhook","webhook","emailConfig","enableEmail","emailTo","emailUsername","server","emailServer","port","emailPort","username","password","emailPassword","to","subject","emailSubject","sendExternalAlertNotification","now","getTime","alertInfo","streamUrl","timestamp","errorCount","alert","config","msgtype","markdown","title","text","toLocaleString","response","fetch","method","headers","body","JSON","stringify","ok","console","statusText","json","errcode","errmsg","log","sendDingTalkAlert","replace","emailContent","getAlertClass","navigator","mailtoLink","encodeURIComponent","window","open","warn","sendEmailAlert","allSettled","sendExternalAlert","String","triggerAlert","enableAlerts","alertSound","play","catch","clearAlert","bufferThreshold","bufferDuration","Math","round","errorThreshold","newErrorCount","video","handlePlay","handlePause","handleError","handleWaiting","handleCanPlay","handleStalled","addEventListener","removeEventListener","hls","flvPlayer","test","HlsModule","Hls","default","isSupported","debug","enableWorker","lowLatencyMode","on","Events","MANIFEST_PARSED","ERROR","details","loadSource","attachMedia","canPlayType","startsWith","FlvModule","flvjs","createPlayer","hasAudio","hasVideo","LOADING_COMPLETE","errorDetail","attachMediaElement","load","destroy","div","style","position","background","overflow","ref","top","left","minWidth","minHeight","objectFit","display","zIndex","controls","autoPlay","audio","preload","source","select","onChange","map","idx","option","right","color","padding","borderRadius","fontSize","alignItems","marginBottom","marginRight","animation","span","marginTop","alertVisual","bottom","border","maxHeight","overflowY","cursor","transition","pointerEvents","onClick","v","fontWeight","marginLeft","setPanelOptions","builder","addTextInput","path","description","defaultValue","addBooleanSwitch","addRadio","settings","label","showIf","showSeriesCount","addNumberInput"],"sourceRoot":""}